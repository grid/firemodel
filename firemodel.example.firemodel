option ts.namespace = "example";

enum TestDirection {
    left,
    right,
    up,
    down,
}

struct TestStruct {
  string where;
  integer how_much;
}

// A Test is a test model.
model TestModel {
  option firestore.path = "users/{user_id}/test_models/{test_model_id}";
  option firestore.autotimestamp = true;

  // The name.
  string name;
  // The age.
  integer age;
  // The number pi.
  double pi;
  // The birth date.
  timestamp birthdate;
  // True if it is good.
  boolean is_good;
  bytes data;
  reference<TestModel> friend;
  geopoint location;
  array<string> colors;
  array<TestDirection> directions;
  array<TestStruct> models;
  array<reference> refs;
  array<reference<TestTimestamps>> model_refs;
  map meta;
  map<string> meta_strs;
  TestDirection direction;
  File test_file;
  URL url;
  TestStruct nested;
  collection<TestModel> nested_collection;
}

model TestTimestamps {
  option firestore.path = "timestamps/{test_timestamps_id}";
  option firestore.autotimestamp = true;
}
