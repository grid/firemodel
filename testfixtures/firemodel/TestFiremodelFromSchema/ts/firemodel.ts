// DO NOT EDIT - Code generated by firemodel (dev).
import { firestore } from 'firebase';

// tslint:disable-next-line:no-namespace
export namespace example {
  type URL = string;

  export interface IFile {
    url: URL;
    mimeType: string;
    name: string;
  }
  export enum TestEnum {
    left = 'LEFT',
    right = 'RIGHT',
    up = 'UP',
    down = 'DOWN',
  }
  export interface ITestStruct {
    where?: string;
    howMuch?: number;
    someEnum?: TestEnum;
  }

  /** A Test is a test model. */
  export interface ITestModel {
    nestedCollection: firestore.CollectionReference<ITestModel>;
    /** The name. */
    name?: string;
    /** The age. */
    age?: number;
    /** The number pi. */
    pi?: number;
    /** The birth date. */
    birthdate?: firestore.Timestamp;
    /** True if it is good. */
    isGood?: boolean;
    data?: firestore.Blob;
    friend?: firestore.DocumentReference<ITestModel>;
    location?: firestore.GeoPoint;
    colors?: string[];
    numbers?: number[];
    bools?: boolean[];
    doubles?: number[];
    directions?: TestEnum[];
    models?: ITestStruct[];
    models2?: ITestStruct[];
    refs?: firestore.DocumentReference[];
    modelRefs?: firestore.DocumentReference<ITestTimestamps>[];
    meta?: { [key: string]: any; };
    metaStrs?: { [key: string]: string; };
    direction?: TestEnum;
    testFile?: IFile;
    url?: URL;
    nested?: ITestStruct;

    /** Record creation timestamp. */
    createdAt?: firestore.Timestamp;
    /** Record update timestamp. */
    updatedAt?: firestore.Timestamp;
  }
  export interface ITestTimestamps {

    /** Record creation timestamp. */
    createdAt?: firestore.Timestamp;
    /** Record update timestamp. */
    updatedAt?: firestore.Timestamp;
  }
  export interface ITest {
    direction?: TestEnum;
  }
}
